var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = JITrench","category":"page"},{"location":"#JITrench","page":"Home","title":"JITrench","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [JITrench]","category":"page"},{"location":"#JITrench.PNGContainer","page":"Home","title":"JITrench.PNGContainer","text":"PNGContainer\n\nA structure for handling images. You can display an image by using it as a return value of a cell or by explicitly display( :: PNGContainer) in Jupyter.\n\n\n\n\n\n","category":"type"},{"location":"#JITrench.plot_graph-Tuple{JITrench.AutoDiff.Variable}","page":"Home","title":"JITrench.plot_graph","text":"plot_graph(var :: Variable; to_file=\"\", title=\"\")\n\nDraw a computational graph with y as the end. This requires the installation of graphviz.\n\nArguments\n\nto_file: Specifies the file name where the image will be saved.\n\nIf it is an empty string, it will return an image of type PNGContainer. See also: PNGContainer\n\ntitle: Title of graph.\n\njulia> x = Variable(10)\nname: nothing \nvalues: 10\ncreator: User-Defined(nothing)\n\njulia> y = x + 3\nname: nothing \nvalues: 13\ncreator: JITrench.Add\n\njulia> JITrench.plot_graph(y, to_file=\"graph.png\") \n\n\n\n\n\n","category":"method"}]
}
